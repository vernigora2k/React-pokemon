{"version":3,"sources":["components/FormSearch.js","aditianal/pokemonTypeColors.js","components/Card.js","components/Loader.js","components/PokemonsList.js","aditianal/pokemonTypeOptions.js","components/SeloctorMultiple.js","pages/Home.js","pages/Details.js","components/Navbar.js","js/apiClient.js","js/controller.js","js/config.js","App.js","reportWebVitals.js","index.js"],"names":["FormSearch","searchPokemon","useContext","Context","useState","value","setValue","className","onSubmit","event","preventDefault","type","placeholder","onChange","target","typeColors","bug","dragon","fairy","fire","ghost","ground","normal","pyschic","steel","dark","electric","fighting","flying","grass","ice","poison","rock","water","Card","data","goToDetails","pokemon","to","onClick","style","maxWidth","src","sprites","front_default","alt","name","types","map","i","backgroundColor","abilities","ability","base_experience","Loader","width","height","role","PokemonsList","pokemonsList","loading","pokemonType","label","url","animatedComponents","makeAnimated","SelectorMultiple","selectTypes","closeMenuOnSelect","components","isMulti","options","isSearchable","Home","getNext","nextPage","getPrev","prevPage","selectedTypes","itemsPerPage","setItemPerPage","minWidth","length","disabled","cursor","Details","selectedPokemon","back_shiny","weight","id","Navbar","exact","headers","Headers","getPokemon","method","fetch","body","redirect","then","response","json","catch","error","console","log","apiRequest","append","urlPokemonsList","urlPokemonType","React","createContext","App","setNextPage","setPrevPage","setLoading","setPokemonsList","setSelectedPokemon","allSelectedPokemon","setAllSelectedPokemon","setItemsPerPage","setSelectedTypes","_","require","fetchData","a","next","previous","results","loadPokemon","Promise","all","dataArray","item","dataIntersectedArray","intersectionBy","resultArray","useEffect","fetchDataMultiple","Provider","res","undefined","Error","err","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.24569113.chunk.js","sourcesContent":["import React, { useContext, useState } from 'react'\r\nimport { Context } from '../App'\r\n\r\nexport const FormSearch = () => {\r\n    const { searchPokemon } = useContext(Context)\r\n    const [ value, setValue ] = useState('')\r\n\r\n    const handleChange = event => {\r\n        setValue(event.target.value)\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        searchPokemon(value)\r\n    }\r\n\r\n    return (\r\n        <form className=\"ml-2 mr-2\" onSubmit={handleSubmit}>\r\n            <div className=\"form-group d-flex\">\r\n                <input\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    placeholder=\"Enter pokemon name for search\"\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                >\r\n                </input>\r\n                <button \r\n                    className=\"form-success btn btn-success ml-1 pl-4 pr-4\"\r\n                    type=\"success\"\r\n                >\r\n                    <strong>search</strong>\r\n                </button>\r\n            </div>\r\n        </form>\r\n    )\r\n}","const typeColors = {\r\n    bug: '#729f3f',\r\n    dragon: '#53a4cf',\r\n    fairy: '#fdb9e9',\r\n    fire: '#fd7d24',\r\n    ghost: '#7b62a3',\r\n    ground: '#f7de3f',\r\n    normal: '#a4acaf',\r\n    pyschic: '#f366b9',\r\n    steel: '#9eb7b',\r\n    dark: '#707070',\r\n    electric: '#eed535',\r\n    fighting: '#d56723',\r\n    flying: '#3dc7ef',\r\n    grass: '#9bcc50',\r\n    ice: '#51c4e7',\r\n    poison: '#b97fc9',\r\n    rock: '#a38c21',\r\n    water: '#4592c4'\r\n}\r\nexport default typeColors","import React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport typeColors from '../aditianal/pokemonTypeColors'\r\nimport { Context } from '../App'\r\nimport './card.scss'\r\n\r\nexport default function Card(data) {\r\n    const { goToDetails} = useContext(Context)\r\n    const { pokemon } = data\r\n\r\n    return (\r\n        <Link\r\n            to=\"/details\"\r\n            className=\"card mb-4 ml-2 mr-2 flex-grow-1 animated\" \r\n            onClick={() => {goToDetails(data)}}\r\n        >\r\n            <img className=\"card-img-top mw-50 align-self-center\" style={{maxWidth: \"400px\"}} src={pokemon.sprites.front_default} alt=\"pokemon img\" />\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{pokemon.name}</h5>\r\n                <div className=\"card-text d-flex justify-content-around\">\r\n                {\r\n                    pokemon.types.map((type,i) => {\r\n                        return (\r\n                            <div \r\n                                className=\"pokemon__type\"\r\n                                style={{backgroundColor: typeColors[type.type.name]}} \r\n                                key={i}\r\n                            >\r\n                                {type.type.name}\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n                </div>\r\n                <div className=\"card-text d-flex\">\r\n                    <strong>abilities:</strong>\r\n                     {\r\n                        pokemon.abilities.map((type,i) => {\r\n                            return (\r\n                                <div className=\"ml-1\" key={i}>\r\n                                    {type.ability.name}\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                <p className=\"card-text\">\r\n                    <small>base experience: {pokemon.base_experience}</small>\r\n                </p>\r\n                <div className=\"hide-hover\">\r\n                    click for details...\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function Loader() {\r\n    return (\r\n        <div className=\"d-flex justify-content-center\">\r\n            <div \r\n                className=\"spinner-border text-primary\" \r\n                style={{width: '4rem', height: '4rem'}}\r\n                role=\"status\"\r\n            >\r\n            <span className=\"sr-only\">...loading</span>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}","import React, { useContext } from 'react'\r\nimport { Context } from '../App'\r\nimport Card from './Card'\r\nimport Loader from './Loader'\r\n\r\nexport default function PokemonsList() {\r\n    const { pokemonsList, loading } = useContext(Context)\r\n\r\n    if (loading) return <Loader />\r\n\r\n    return (\r\n        <div className=\"cards d-flex flex-wrap justify-content-between\">\r\n            {pokemonsList.map((pokemon, i) => {\r\n                return <Card pokemon={pokemon} key={i} />\r\n            })}\r\n        </div>\r\n    )\r\n}","export const pokemonType = [\r\n    {value: \"normal\", label: \"normal\", url: \"https://pokeapi.co/api/v2/type/1/\"},\r\n    {value: \"fighting\", label: \"fighting\", url: \"https://pokeapi.co/api/v2/type/2/\"},\r\n    {value: \"flying\", label: \"flying\", url: \"https://pokeapi.co/api/v2/type/3/\"},\r\n    {value: \"poison\", label: \"poison\", url: \"https://pokeapi.co/api/v2/type/4/\"},\r\n    {value: \"ground\", label: \"ground\", url: \"https://pokeapi.co/api/v2/type/5/\"},\r\n    {value: \"rock\", label: \"rock\", url: \"https://pokeapi.co/api/v2/type/6/\"},\r\n    {value: \"bug\", label: \"bug\", url: \"https://pokeapi.co/api/v2/type/7/\"},\r\n    {value: \"ghost\", label: \"ghost\", url: \"https://pokeapi.co/api/v2/type/8/\"},\r\n    {value: \"steel\", label: \"steel\", url: \"https://pokeapi.co/api/v2/type/9/\"},\r\n    {value: \"fire\", label: \"fire\", url: \"https://pokeapi.co/api/v2/type/10/\"},\r\n    {value: \"water\", label: \"water\", url: \"https://pokeapi.co/api/v2/type/11/\"},\r\n    {value: \"grass\", label: \"grass\", url: \"https://pokeapi.co/api/v2/type/12/\"},\r\n    {value: \"electric\", label: \"electric\", url: \"https://pokeapi.co/api/v2/type/13/\"},\r\n    {value: \"psychic\", label: \"psychic\", url: \"https://pokeapi.co/api/v2/type/14/\"},\r\n    {value: \"ice\", label: \"ice\", url: \"https://pokeapi.co/api/v2/type/15/\"},\r\n    {value: \"dragon\", label: \"dragon\", url: \"https://pokeapi.co/api/v2/type/16/\"},\r\n    {value: \"dark\", label: \"dark\", url: \"https://pokeapi.co/api/v2/type/17/\"},\r\n    {value: \"fairy\", label: \"fairy\", url: \"https://pokeapi.co/api/v2/type/18/\"},\r\n    {value: \"shadow\", label: \"shadow\", url: \"https://pokeapi.co/api/v2/type/10002/\"}\r\n]","import React, { useContext, useState } from 'react';\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\nimport { pokemonType } from '../aditianal/pokemonTypeOptions';\r\nimport { Context } from '../App';\r\n\r\nconst animatedComponents = makeAnimated();\r\n\r\nexport default function SelectorMultiple() {   \r\n    const { selectTypes } = useContext(Context) \r\n        \r\n    return (\r\n        <Select\r\n            closeMenuOnSelect={false}\r\n            components={animatedComponents}\r\n            isMulti\r\n            options={pokemonType}\r\n            isSearchable\r\n            onChange={(types) => selectTypes(types)}\r\n        />\r\n    );\r\n}\r\n","import React, { Fragment, useContext } from 'react'\r\nimport { Context } from '../App'\r\nimport { FormSearch } from '../components/FormSearch'\r\nimport PokemonsList from '../components/PokemonsList'\r\nimport SelectorMultiple from '../components/SeloctorMultiple'\r\n\r\nexport const Home = () => {\r\n    const { getNext, nextPage, getPrev, prevPage, selectedTypes, itemsPerPage, setItemPerPage } = useContext(Context)\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"d-flex justify-content-around align-items-center mb-3\">\r\n                <h1>Main page</h1>\r\n                <div style={{minWidth: \"120px\"}}>\r\n                <SelectorMultiple />\r\n                </div>\r\n                <div className=\"d-flex align-items-center\">\r\n                    {prevPage && <button onClick={() => getPrev(prevPage)} className=\"btn btn-primary\">prev</button>}\r\n                    { nextPage && selectedTypes.length > 0 \r\n                        ? <button onClick={() => getNext(nextPage)} className=\"btn btn-success ml-2\" disabled>next</button> \r\n                        : <button onClick={() => getNext(nextPage)} className=\"btn btn-success ml-2\">next</button> }\r\n                    {!selectedTypes.length > 0 && <div className=\"d-flex ml-3\">\r\n                        <div style={{cursor: \"pointer\"}} onClick={() => setItemPerPage(10)}>\r\n                            {itemsPerPage==10 ? <h2>10</h2> : <h3>10</h3>}\r\n                        </div>\r\n                        <div style={{cursor: \"pointer\"}} className=\"ml-1\" onClick={() => setItemPerPage(20)}>\r\n                            {itemsPerPage==20 ? <h2>20</h2> : <h3>20</h3>}\r\n                        </div>\r\n                        <div style={{cursor: \"pointer\"}} className=\"ml-1\" onClick={() => setItemPerPage(50)}>\r\n                            {itemsPerPage==50 ? <h2>50</h2> : <h3>50</h3>}\r\n                        </div>\r\n                    </div>}\r\n                </div>\r\n            </div>\r\n            <FormSearch />\r\n            <PokemonsList />\r\n        </Fragment>\r\n    )\r\n}","import React, { Fragment, useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport typeColors from '../aditianal/pokemonTypeColors'\r\nimport { Context } from '../App'\r\n\r\nexport const Details = () => {\r\n    const { selectedPokemon } = useContext(Context)\r\n\r\n    if (!selectedPokemon) return (\r\n        <div className=\"alert alert-warning\" role=\"alert\">\r\n            Firstly you have to select Pokemon!\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"d-flex justify-content-between\">\r\n                <h1>Details page</h1>\r\n                <Link className=\"h2\" to=\"/\">go Back</Link>\r\n            </div>\r\n            <div className=\"card mt-3 d-flex\" >\r\n                <img className=\"card-img-top align-self-center\" style={{width: \"300px\"}} src={selectedPokemon.pokemon.sprites.back_shiny} alt=\"Card image cap\" />\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{selectedPokemon.pokemon.name}</h5>\r\n                    <div className=\"card-text\">\r\n                        {\r\n                            selectedPokemon.pokemon.types.map((type,i) => {\r\n                                return (\r\n                                    <div \r\n                                        className=\"pokemon__type mb-1\"\r\n                                        style={{backgroundColor: typeColors[type.type.name]}} \r\n                                        key={i}\r\n                                    >\r\n                                        {type.type.name}\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    {\r\n                        selectedPokemon.pokemon.abilities.map((type,i) => {\r\n                            return (\r\n                                <li className=\"list-group-item\" key={i}>\r\n                                    {type.ability.name}\r\n                                </li>\r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n                <div className=\"card-body\">\r\n                    <p className=\"card-text d-flex justify-content-between\">\r\n                        <strong>base_experience:</strong>\r\n                        {selectedPokemon.pokemon.base_experience}\r\n                    </p>\r\n                    <p className=\"card-text d-flex justify-content-between\">\r\n                        <strong>weight:</strong>\r\n                        {selectedPokemon.pokemon.weight}\r\n                    </p>\r\n                    <p className=\"card-text d-flex justify-content-between\">\r\n                        <strong>height:</strong>\r\n                        {selectedPokemon.pokemon.height}\r\n                    </p>\r\n                    <p className=\"card-text d-flex justify-content-between\">\r\n                        <strong>id:</strong>\r\n                        {selectedPokemon.pokemon.id}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport const Navbar = () => (\r\n    <nav className=\"navbar navbar-dark navbar-expand-lg bg-primary\">\r\n        <div className=\"navbar-brand\">\r\n            Pokemons app\r\n        </div>\r\n        <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n                <NavLink\r\n                    className=\"nav-link\"\r\n                    to=\"/\"\r\n                    exact\r\n                >\r\n                    Main page\r\n                </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <NavLink\r\n                    className=\"nav-link\"\r\n                    to=\"/details\"\r\n                >\r\n                    Details page\r\n                </NavLink>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n)","const headers = new Headers()\r\nheaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\")\r\n\r\nexport function apiRequest(method, url, urlencoded = null) {\r\n    const requestOptions = {\r\n        method: method,\r\n        headers: headers,\r\n        body: urlencoded,\r\n        redirect: 'follow',\r\n    }\r\n\r\n    return fetch(url, requestOptions)\r\n        .then(response => {\r\n            return response.json()\r\n        })\r\n        .catch(error => console.log(error))\r\n}","import { apiRequest } from \"./apiClient\";\r\n\r\nexport function getPokemon(url) {\r\n    return apiRequest('GET', url)\r\n        .then()\r\n        .catch(error => console.log(error))\r\n}","export const urlPokemonsList = 'https://pokeapi.co/api/v2/pokemon?offset=0&limit='\r\nexport const urlSearchPokemon = 'https://pokeapi.co/api/v2/pokemon/'\r\nexport const urlPokemonType = 'https://pokeapi.co/api/v2/type/'","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { Home } from './pages/Home'\nimport { Details } from './pages/Details'\nimport { Navbar } from './components/Navbar';\nimport { getPokemon } from './js/controller';\nimport { urlPokemonsList, urlPokemonType, urlSearchPokemon } from './js/config';\n\nexport const Context = React.createContext()\n\nfunction App() {\n  const [nextPage, setNextPage] = useState(null)\n  const [prevPage, setPrevPage] = useState(null)\n  const [loading, setLoading] = useState(true)\n  const [pokemonsList, setPokemonsList] = useState([])\n  const [selectedPokemon, setSelectedPokemon] = useState(null)\n  const [allSelectedPokemon, setAllSelectedPokemon] = useState()\n  const [itemsPerPage, setItemsPerPage] = useState(10)\n  const [selectedTypes, setSelectedTypes] = useState([])\n\n  const intersection = require('array-intersection')\n  const _ = require('lodash')\n\n  async function fetchData(url=urlPokemonsList + itemsPerPage) {\n    const {next, previous, results} = await getPokemon(url)\n    setNextPage(next)\n    setPrevPage(previous)\n    await loadPokemon(results)\n    setLoading(false)\n  }\n\n  async function fetchDataMultiple(url=urlPokemonType) {\n    setAllSelectedPokemon(\n      await Promise.all (selectedTypes.map(async type => {\n        return await getPokemon(type.url)\n      }))\n    )\n  }\n\n  async function fetchDataMultipleIntersected() {\n    setLoading(true)\n    if (!allSelectedPokemon) {\n      fetchData()\n      return \n    }\n    let dataArray = allSelectedPokemon.map(item => item.pokemon)\n    let dataIntersectedArray = _.intersectionBy(...dataArray, 'pokemon.name')\n    let resultArray = dataIntersectedArray.map(item => item.pokemon)\n    await loadPokemon(resultArray)\n    setLoading(false)\n  }\n\n  const loadPokemon = async (data) => {\n    const pokemonsList = await Promise.all(data.map(async pokemon => {\n      return await getPokemon(pokemon.url)\n    }))\n    setPokemonsList(pokemonsList)\n  }\n  \n  const getNext = async (nextPage) => {\n    setLoading(true)\n    fetchData(nextPage)\n  }\n\n  const getPrev = async (prevPage) => {\n    setLoading(true)\n    fetchData(prevPage)\n  }\n\n  const goToDetails = (pokemon) => {\n    setSelectedPokemon(pokemon)\n  }\n\n  const setItemPerPage = (item) => {\n    setLoading(true)\n    setItemsPerPage(item)\n  }\n\n  const searchPokemon = (pokemon) => {\n    if (!pokemon) {\n      fetchData()\n      return null\n    }\n    getPokemon(urlSearchPokemon + pokemon)\n    .then(res => {\n        if (res === undefined) throw new Error('some wrong!!!')\n        setPokemonsList([res])\n      })\n    .catch(err => console.log(err))\n  }\n\n  const selectTypes = (types) => {\n    if (!types.length) fetchData()\n    setSelectedTypes(types)\n  }\n  \n  useEffect(fetchData, [])\n\n  useEffect(fetchData, [itemsPerPage])\n\n  useEffect(() => fetchDataMultiple(selectedTypes), [selectedTypes])\n\n  useEffect(fetchDataMultipleIntersected, [allSelectedPokemon])\n\n  return (\n    <Context.Provider value={{getNext, nextPage, getPrev, prevPage, pokemonsList, loading, goToDetails, selectedPokemon, setItemPerPage, itemsPerPage, searchPokemon, selectTypes, selectedTypes }}>\n      <BrowserRouter>\n        <Navbar />\n        <div className=\"container pt-4\">\n          <Switch>\n            <Route path={'/'} exact component={Home} />\n            <Route path={'/details'} component={Details} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport BrowserRouter from 'react-router-dom/BrowserRouter'\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}